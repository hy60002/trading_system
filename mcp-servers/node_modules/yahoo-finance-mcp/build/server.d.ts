import { McpServer } from "@modelcontextprotocol/sdk/server/mcp.js";
import { SSEServerTransport } from "@modelcontextprotocol/sdk/server/sse.js";
import { StreamableHTTPServerTransport } from "@modelcontextprotocol/sdk/server/streamableHttp.js";
/**
 * YahooFinanceMcp类 - 封装Yahoo Finance MCP服务器功能
 */
export declare class YahooFinanceMcp {
    server: McpServer;
    private transport;
    constructor();
    /**
     * 设置工具定义
     */
    private setupTools;
    /**
     * 启动MCP服务器
     * 返回一个Promise，服务器启动成功后resolve，失败则reject
     */
    start(transportType?: 'stdio' | 'sse' | 'streamableHttp', options?: {
        endpoint?: string;
        response?: any;
        sessionIdGenerator?: () => string;
    }): Promise<void>;
    /**
     * 停止MCP服务器
     * 注意：当前SDK可能没有提供disconnect方法，因此这里我们只是清理引用
     */
    stop(): Promise<void>;
    /**
     * 获取服务器实例，用于 Hono 集成
     */
    getServer(): McpServer;
    /**
     * 创建 SSE 传输的方法
     */
    createSSETransport(endpoint: string | undefined, response: any): SSEServerTransport;
    /**
     * 创建 StreamableHTTP 传输的方法
     */
    createStreamableHTTPTransport(options?: {
        sessionIdGenerator?: () => string;
    }): StreamableHTTPServerTransport;
}
export declare const yahooFinanceMcp: YahooFinanceMcp;
//# sourceMappingURL=server.d.ts.map