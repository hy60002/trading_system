import { ErrorCode } from '@modelcontextprotocol/sdk/types.js';
export class MCPError extends Error {
    code;
    data;
    constructor(message, code, data) {
        super(message);
        this.name = 'MCPError';
        this.code = code;
        this.data = data;
    }
}
export class ClientConnectionError extends MCPError {
    constructor(clientName, cause) {
        super(`Failed to connect to client ${clientName}: ${cause.message}`, ErrorCode.ConnectionClosed, { cause });
        this.name = 'ClientConnectionError';
    }
}
export class ClientNotFoundError extends MCPError {
    constructor(clientName) {
        super(`Client '${clientName}' not found`, ErrorCode.MethodNotFound, { clientName });
        this.name = 'ClientNotFoundError';
    }
}
export class ClientOperationError extends MCPError {
    constructor(clientName, operation, cause, context) {
        super(`Operation ${operation} failed on client ${clientName}: ${cause.message}`, ErrorCode.InternalError, {
            cause,
            context,
        });
        this.name = 'ClientOperationError';
    }
}
export class ValidationError extends MCPError {
    constructor(message, validationErrors) {
        super(message, ErrorCode.InvalidParams, { validationErrors });
        this.name = 'ValidationError';
    }
}
export class TransportError extends MCPError {
    constructor(transportName, cause) {
        super(`Transport error for ${transportName}: ${cause.message}`, ErrorCode.InternalError, { cause });
        this.name = 'TransportError';
    }
}
export class InvalidRequestError extends MCPError {
    constructor(message, data) {
        super(message, ErrorCode.InvalidRequest, data);
        this.name = 'InvalidRequestError';
    }
}
export class CapabilityError extends MCPError {
    constructor(clientName, capability) {
        super(`Client '${clientName}' does not support the '${capability}' capability`, ErrorCode.MethodNotFound, {
            clientName,
            capability,
        });
    }
}
//# sourceMappingURL=errorTypes.js.map