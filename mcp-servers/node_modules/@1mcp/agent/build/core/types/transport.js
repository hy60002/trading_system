import { z } from 'zod';
/**
 * Zod schema for OAuth configuration
 */
export const oAuthConfigSchema = z.object({
    clientId: z.string().optional(),
    clientSecret: z.string().optional(),
    scopes: z.array(z.string()).optional(),
    autoRegister: z.boolean().optional(),
});
/**
 * Zod schema for transport configuration
 */
export const transportConfigSchema = z.object({
    type: z.enum(['stdio', 'sse', 'http', 'streamableHttp']).optional(),
    disabled: z.boolean().optional(),
    timeout: z.number().optional(),
    tags: z.array(z.string()).optional(),
    oauth: oAuthConfigSchema.optional(),
    // HTTP/SSE Parameters
    url: z.string().url().optional(),
    headers: z.record(z.string()).optional(),
    // StdioServerParameters fields
    command: z.string().optional(),
    args: z.array(z.string()).optional(),
    stderr: z.union([z.string(), z.number()]).optional(),
    cwd: z.string().optional(),
    env: z.record(z.string()).optional(),
});
//# sourceMappingURL=transport.js.map