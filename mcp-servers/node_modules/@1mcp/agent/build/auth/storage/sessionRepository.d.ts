import { SessionData } from '../sessionTypes.js';
import { FileStorageService } from './fileStorageService.js';
/**
 * Repository for session operations
 *
 * Manages OAuth 2.1 sessions with automatic expiration and cleanup.
 * Sessions store user authorization state and granted scopes.
 */
export declare class SessionRepository {
    private storage;
    constructor(storage: FileStorageService);
    /**
     * Creates a new session
     */
    create(clientId: string, resource: string, scopes: string[], ttlMs: number): string;
    /**
     * Creates a session with a specific token ID (for access tokens)
     */
    createWithId(tokenId: string, clientId: string, resource: string, scopes: string[], ttlMs: number): string;
    /**
     * Retrieves a session by ID
     */
    get(sessionId: string): SessionData | null;
    /**
     * Deletes a session by ID
     */
    delete(sessionId: string): boolean;
}
//# sourceMappingURL=sessionRepository.d.ts.map