import { AuthRequestData } from '../sessionTypes.js';
import { FileStorageService } from './fileStorageService.js';
/**
 * Repository for authorization request operations
 *
 * Manages temporary authorization requests used in the consent flow.
 * These store OAuth parameters securely server-side while user reviews consent.
 */
export declare class AuthRequestRepository {
    private storage;
    constructor(storage: FileStorageService);
    /**
     * Creates a new authorization request
     */
    create(clientId: string, redirectUri: string, codeChallenge?: string, state?: string, resource?: string, scopes?: string[]): string;
    /**
     * Retrieves authorization request data by ID
     */
    get(authRequestId: string): AuthRequestData | null;
    /**
     * Deletes an authorization request by ID
     */
    delete(authRequestId: string): boolean;
}
//# sourceMappingURL=authRequestRepository.d.ts.map